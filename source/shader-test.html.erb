<h2>Shader Test</h2>

<section class="shaderTeatPage">
<style>
#container{
  height: 500px;
  width: 500px;
}
</style>


		<div id="container"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/105/three.min.js"></script>

		<script id="vertexShader" type="x-shader/x-vertex">
			varying vec2 vUv;
			void main()	{
				vUv = uv;
				gl_Position = vec4( position, 1.0 );
			}
		</script>

		<script id="fragmentShader" type="x-shader/x-fragment">
			varying vec2 vUv;
			uniform float time;
			void main()	{
	      gl_FragColor = vec4(0.553,0.802,1.000,1.000);
			}
		</script>

		<script type="module">
			// import * as THREE from '../build/three.module.js';
			var container;
			var camera, scene, renderer;
			var uniforms;
			init();
			animate();
			function init() {
				container = document.getElementById( 'container' );
				camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );
				scene = new THREE.Scene();
				var geometry = new THREE.PlaneBufferGeometry( 2, 2 );
				uniforms = {
					"time": { value: 1.0 }
				};
				var material = new THREE.ShaderMaterial( {
					uniforms: uniforms,
					vertexShader: document.getElementById( 'vertexShader' ).textContent,
					fragmentShader: document.getElementById( 'fragmentShader' ).textContent
				} );
				var mesh = new THREE.Mesh( geometry, material );
				scene.add( mesh );
				renderer = new THREE.WebGLRenderer();
				renderer.setPixelRatio( window.devicePixelRatio );
				container.appendChild( renderer.domElement );
				onWindowResize();
				window.addEventListener( 'resize', onWindowResize, false );
			}
			function onWindowResize() {
				renderer.setSize( container.clientWidth, container.clientHeight );
			}
			
			function animate( timestamp ) {
				requestAnimationFrame( animate );
				uniforms[ "time" ].value = timestamp / 1000;
				renderer.render( scene, camera );
			}

		</script>

</section>
  

<%= javascript_include_tag "pages/forShaderTest" %>